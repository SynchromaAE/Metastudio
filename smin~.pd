#N canvas 0 0 870 421 10;
#X obj 124 73 adc~;
#X obj 104 241 *~;
#X obj 148 155 dbtorms;
#X obj 265 23 inlet;
#X obj 343 65 s \$0-volume-set;
#X msg 351 36 100;
#X obj 327 8 loadbang;
#X obj 653 307 s \$0-volume-set;
#X msg 651 273 label \$1;
#X obj 667 232 makesymbol volume=%s;
#X obj 167 90 r \$0-volume;
#X obj 661 189 r \$0-volume;
#N canvas 0 0 450 300 limiting 0;
#X obj 301 79 inlet;
#X obj 297 118 switch~;
#X obj 67 154 *~;
#X obj 67 134 z~ 64;
#X obj 91 44 inlet~;
#X obj 67 213 outlet~;
#X obj 92 99 limiter~;
#X connect 0 0 1 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 4 0 6 0;
#X connect 6 0 2 1;
#X restore 137 337 pd limiting;
#X obj 160 52 r \$0-limit;
#X obj 413 122 s \$0-limit-set;
#X msg 412 100 0;
#X obj 140 246 == 0;
#X obj 104 310 *~ 1;
#X obj 244 44 route vol limit;
#X obj 246 74 s \$0-limit-set;
#X obj 138 208 line~;
#X obj 137 183 pack f 20;
#X text 273 221 72 300 35 99;
#X obj 301 116 cnv 15 70 39 empty empty empty 6 6 0 7 -261681 -123526
0;
#X obj 329 102 cnv 15 42 29 empty empty empty 4 6 0 7 -261681 -123526
0;
#X obj 308 118 hsl 57 12 0 112 0 0 \$0-volume \$0-volume-set volume=100
4 6 0 8 -261689 -258699 -86147 5000 1;
#X obj 332 105 tgl 10 0 \$0-limit \$0-limit-set limit 11 6 0 8 -86277
-261234 -86277 0 1;
#X obj 471 235 *~;
#X obj 515 149 dbtorms;
#X obj 573 222 outlet;
#X obj 534 84 r \$0-volume;
#N canvas 0 0 450 300 limiting 0;
#X obj 301 79 inlet;
#X obj 297 118 switch~;
#X obj 67 154 *~;
#X obj 67 134 z~ 64;
#X obj 91 44 inlet~;
#X obj 67 213 outlet~;
#X obj 92 99 limiter~;
#X connect 0 0 1 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 4 0 6 0;
#X connect 6 0 2 1;
#X restore 467 329 pd limiting;
#X obj 527 46 r \$0-limit;
#X obj 507 240 == 0;
#X obj 432 341 *~ 1;
#X msg 567 125 vol \$1;
#X msg 596 153 limit \$1;
#X obj 505 202 line~;
#X obj 504 177 pack f 20;
#X text 640 215 72 300 35 99;
#X obj 441 375 outlet~;
#X obj 103 391 outlet~;
#N canvas 98 0 648 669 fft-analysis 0;
#X obj 35 589 *~;
#X obj 143 305 *~;
#X obj 158 150 *~;
#X obj 35 72 *~;
#X obj 76 527 *~;
#X obj 35 44 inlet~;
#X obj 35 528 *~;
#X obj 34 101 rfft~;
#X obj 35 558 rifft~;
#X obj 36 616 outlet~;
#X obj 119 149 *~;
#X obj 119 176 +~;
#X obj 100 422 /~;
#X text 176 446 is signal power and "m" is mask.;
#X obj 131 332 -~;
#X obj 131 355 max~ 0;
#X obj 99 448 q8_sqrt~;
#X text 175 464 (zero if s < m).;
#X obj 144 256 tabreceive~ \$0-mask;
#X obj 76 72 tabreceive~ \$0-hann;
#X obj 69 590 tabreceive~ \$0-hann;
#N canvas 91 250 910 495 calculate-mask 0;
#X obj 125 379 inlet~;
#X msg 371 283 0;
#X msg 371 166 0;
#X obj 240 196 float;
#X obj 294 200 + 1;
#X obj 240 144 bang~;
#X obj 240 169 spigot;
#X floatatom 411 218 0 0 0 0 - - -;
#X obj 315 408 -~;
#X obj 371 258 sel 0;
#X obj 327 443 *~;
#X obj 293 443 +~;
#X floatatom 351 313 0 0 0 0 - - -;
#X obj 240 219 t f f;
#X obj 371 141 t b f;
#X obj 411 165 /;
#X text 483 212 number of;
#X text 491 227 frames;
#X floatatom 481 166 0 0 0 0 - - -;
#X obj 481 136 / 4;
#X text 521 133 hop size (analysis;
#X text 546 149 period) in msec;
#X obj 359 408 tabreceive~ \$0-mask;
#X obj 292 468 tabsend~ \$0-mask;
#X obj 371 218 <;
#X obj 235 258 expr 1/($f1+1);
#X text 134 17 calculate a mask using N msec of background noise;
#X text 43 354 current power (for each channel);
#X text 367 430 average the current power into the last mask to get
the new mask. The new value is weighted 1/n on the nth iteration.;
#X text 390 312 weight to average in new power to mask;
#X text 11 203 loop counting to desired;
#X text 78 219 number of frames;
#X text 72 39 This loops for "make-mask" milliseconds \, averaging
power in each channel over that amount of time. This is done by a moving
average whose weight is adjusted to average each new value equally
with each of the accumulating ones.;
#X obj 545 45 inlet;
#X obj 599 44 inlet;
#X connect 0 0 8 0;
#X connect 1 0 12 0;
#X connect 2 0 3 1;
#X connect 2 0 24 0;
#X connect 3 0 13 0;
#X connect 3 0 4 0;
#X connect 4 0 3 1;
#X connect 5 0 6 0;
#X connect 6 0 3 0;
#X connect 7 0 24 1;
#X connect 8 0 10 0;
#X connect 9 0 1 0;
#X connect 10 0 11 1;
#X connect 11 0 23 0;
#X connect 12 0 10 1;
#X connect 13 0 24 0;
#X connect 13 1 25 0;
#X connect 14 0 2 0;
#X connect 14 1 15 0;
#X connect 15 0 7 0;
#X connect 19 0 15 1;
#X connect 19 0 18 0;
#X connect 22 0 8 1;
#X connect 22 0 11 0;
#X connect 24 0 6 1;
#X connect 24 0 9 0;
#X connect 25 0 12 0;
#X connect 33 0 14 0;
#X connect 34 0 19 0;
#X restore 132 203 pd calculate-mask;
#X text 91 98 real Fourier transform;
#X text 193 355 ... but not less than zero;
#X text 101 561 real inverse Fourier transform;
#X text 196 498 normalize by 2/(3N) where N is window size;
#X text 168 332 current power ("s") minus level-adjusted mask ("m")
;
#X text 156 175 compute power (call it "s") in each channel;
#X obj 123 395 +~ 1e-20;
#X text 203 395 protect against division by zero;
#X text 179 426 compute sqrt((s-m)/s) where "s";
#X text 296 204 <- subwindow calculates noise mask;
#X obj 98 499 /~ 1536;
#X obj 213 147 inlet;
#X obj 274 144 inlet;
#X obj 471 177 switch~ 1024 4 1;
#X obj 477 142 inlet;
#X obj 165 278 inlet;
#X connect 0 0 9 0;
#X connect 1 0 14 1;
#X connect 2 0 11 1;
#X connect 3 0 7 0;
#X connect 4 0 8 1;
#X connect 5 0 3 0;
#X connect 6 0 8 0;
#X connect 7 0 6 0;
#X connect 7 0 10 0;
#X connect 7 0 10 1;
#X connect 7 1 4 0;
#X connect 7 1 2 0;
#X connect 7 1 2 1;
#X connect 8 0 0 0;
#X connect 10 0 11 0;
#X connect 11 0 14 0;
#X connect 11 0 21 0;
#X connect 11 0 28 0;
#X connect 12 0 16 0;
#X connect 14 0 15 0;
#X connect 15 0 12 0;
#X connect 16 0 32 0;
#X connect 18 0 1 0;
#X connect 19 0 3 1;
#X connect 20 0 0 1;
#X connect 28 0 12 1;
#X connect 32 0 6 1;
#X connect 32 0 4 1;
#X connect 33 0 21 1;
#X connect 34 0 21 2;
#X connect 36 0 35 0;
#X connect 37 0 1 1;
#X restore 146 269 pd fft-analysis;
#N canvas 0 0 592 442 mask-table 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-mask 512 float 0;
#X coords 0 500 511 0 400 300 1;
#X restore 110 76 graph;
#X text 25 14 This table (1073-mask) is the average power measured
in each channel of the spectrum \, presumed to represent the noise
floor.;
#X restore 333 341 pd mask-table;
#N canvas 0 110 565 454 hann-window 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array \$0-hann 1024 float 0;
#X coords 0 1 1023 0 300 100 1;
#X restore 82 311 graph;
#X obj 378 165 osc~;
#X obj 378 190 *~ -0.5;
#X obj 378 214 +~ 0.5;
#X obj 331 247 tabwrite~ \$0-hann;
#X obj 38 173 /;
#X obj 127 142 samplerate~;
#X obj 177 204 swap;
#X obj 177 228 /;
#X obj 49 201 * 1000;
#X obj 38 115 t f b f;
#X msg 173 92 resize \$1;
#X obj 173 116 s \$0-hann;
#X msg 382 130 0;
#X obj 330 131 t f b;
#X text 15 8 calculate Hann window table (variable window size) and
constants window-hz (fundamental frequency of analysis) \, window-sec
and window-msec (analysis window size in seconds and msec).;
#X obj 94 58 inlet;
#X obj 104 200 outlet;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 9 0;
#X connect 6 0 5 1;
#X connect 6 0 7 1;
#X connect 7 0 8 0;
#X connect 7 1 8 1;
#X connect 8 0 14 0;
#X connect 9 0 17 0;
#X connect 10 0 5 0;
#X connect 10 0 7 0;
#X connect 10 1 6 0;
#X connect 10 2 11 0;
#X connect 11 0 12 0;
#X connect 13 0 1 1;
#X connect 14 0 1 0;
#X connect 14 1 4 0;
#X connect 14 1 13 0;
#X connect 16 0 10 0;
#X restore 261 276 pd hann-window;
#X obj 305 133 tgl 12 0 \$0-nmask \$0-nmask-set nmask 14 6 0 10 -261234
-258113 -258113 0 1;
#X msg 359 228 2000;
#X obj 354 181 r \$0-nmask;
#X obj 354 203 sel 1;
#X obj 100 279 *~ 1;
#X obj 145 297 *~ 0;
#X obj 197 205 r \$0-nmask;
#X obj 200 230 == 0;
#X msg 262 255 1024;
#X obj 296 255 loadbang;
#N canvas 98 0 648 669 fft-analysis 0;
#X obj 35 589 *~;
#X obj 143 305 *~;
#X obj 158 150 *~;
#X obj 35 72 *~;
#X obj 76 527 *~;
#X obj 35 44 inlet~;
#X obj 35 528 *~;
#X obj 34 101 rfft~;
#X obj 35 558 rifft~;
#X obj 36 616 outlet~;
#X obj 119 149 *~;
#X obj 119 176 +~;
#X obj 100 422 /~;
#X text 176 446 is signal power and "m" is mask.;
#X obj 131 332 -~;
#X obj 131 355 max~ 0;
#X obj 99 448 q8_sqrt~;
#X text 175 464 (zero if s < m).;
#X obj 144 256 tabreceive~ \$0-mask;
#X obj 76 72 tabreceive~ \$0-hann;
#X obj 69 590 tabreceive~ \$0-hann;
#N canvas 91 250 910 495 calculate-mask 0;
#X obj 125 379 inlet~;
#X msg 371 283 0;
#X msg 371 166 0;
#X obj 240 196 float;
#X obj 294 200 + 1;
#X obj 240 144 bang~;
#X obj 240 169 spigot;
#X floatatom 411 218 0 0 0 0 - - -;
#X obj 315 408 -~;
#X obj 371 258 sel 0;
#X obj 327 443 *~;
#X obj 293 443 +~;
#X floatatom 351 313 0 0 0 0 - - -;
#X obj 240 219 t f f;
#X obj 371 141 t b f;
#X obj 411 165 /;
#X text 483 212 number of;
#X text 491 227 frames;
#X floatatom 481 166 0 0 0 0 - - -;
#X obj 481 136 / 4;
#X text 521 133 hop size (analysis;
#X text 546 149 period) in msec;
#X obj 359 408 tabreceive~ \$0-mask;
#X obj 292 468 tabsend~ \$0-mask;
#X obj 371 218 <;
#X obj 235 258 expr 1/($f1+1);
#X text 134 17 calculate a mask using N msec of background noise;
#X text 43 354 current power (for each channel);
#X text 367 430 average the current power into the last mask to get
the new mask. The new value is weighted 1/n on the nth iteration.;
#X text 390 312 weight to average in new power to mask;
#X text 11 203 loop counting to desired;
#X text 78 219 number of frames;
#X text 72 39 This loops for "make-mask" milliseconds \, averaging
power in each channel over that amount of time. This is done by a moving
average whose weight is adjusted to average each new value equally
with each of the accumulating ones.;
#X obj 545 45 inlet;
#X obj 599 44 inlet;
#X connect 0 0 8 0;
#X connect 1 0 12 0;
#X connect 2 0 3 1;
#X connect 2 0 24 0;
#X connect 3 0 13 0;
#X connect 3 0 4 0;
#X connect 4 0 3 1;
#X connect 5 0 6 0;
#X connect 6 0 3 0;
#X connect 7 0 24 1;
#X connect 8 0 10 0;
#X connect 9 0 1 0;
#X connect 10 0 11 1;
#X connect 11 0 23 0;
#X connect 12 0 10 1;
#X connect 13 0 24 0;
#X connect 13 1 25 0;
#X connect 14 0 2 0;
#X connect 14 1 15 0;
#X connect 15 0 7 0;
#X connect 19 0 15 1;
#X connect 19 0 18 0;
#X connect 22 0 8 1;
#X connect 22 0 11 0;
#X connect 24 0 6 1;
#X connect 24 0 9 0;
#X connect 25 0 12 0;
#X connect 33 0 14 0;
#X connect 34 0 19 0;
#X restore 132 203 pd calculate-mask;
#X text 91 98 real Fourier transform;
#X text 193 355 ... but not less than zero;
#X text 101 561 real inverse Fourier transform;
#X text 196 498 normalize by 2/(3N) where N is window size;
#X text 168 332 current power ("s") minus level-adjusted mask ("m")
;
#X text 156 175 compute power (call it "s") in each channel;
#X obj 123 395 +~ 1e-20;
#X text 203 395 protect against division by zero;
#X text 179 426 compute sqrt((s-m)/s) where "s";
#X text 296 204 <- subwindow calculates noise mask;
#X obj 98 499 /~ 1536;
#X obj 213 147 inlet;
#X obj 274 144 inlet;
#X obj 471 177 switch~ 1024 4 1;
#X obj 477 142 inlet;
#X obj 165 278 inlet;
#X connect 0 0 9 0;
#X connect 1 0 14 1;
#X connect 2 0 11 1;
#X connect 3 0 7 0;
#X connect 4 0 8 1;
#X connect 5 0 3 0;
#X connect 6 0 8 0;
#X connect 7 0 6 0;
#X connect 7 0 10 0;
#X connect 7 0 10 1;
#X connect 7 1 4 0;
#X connect 7 1 2 0;
#X connect 7 1 2 1;
#X connect 8 0 0 0;
#X connect 10 0 11 0;
#X connect 11 0 14 0;
#X connect 11 0 21 0;
#X connect 11 0 28 0;
#X connect 12 0 16 0;
#X connect 14 0 15 0;
#X connect 15 0 12 0;
#X connect 16 0 32 0;
#X connect 18 0 1 0;
#X connect 19 0 3 1;
#X connect 20 0 0 1;
#X connect 28 0 12 1;
#X connect 32 0 6 1;
#X connect 32 0 4 1;
#X connect 33 0 21 1;
#X connect 34 0 21 2;
#X connect 36 0 35 0;
#X connect 37 0 1 1;
#X restore 474 272 pd fft-analysis;
#X obj 428 282 *~ 1;
#X obj 473 300 *~ 0;
#X obj 575 292 r \$0-nmask;
#X obj 578 317 == 0;
#X obj 320 144 nbx 5 10 0 100 0 0 \$0-squelch \$0-squelch-set squ 32
-4 0 9 -232576 -45076 -159808 0 256;
#X obj 269 177 r \$0-squelch;
#X connect 0 0 1 0;
#X connect 0 1 27 0;
#X connect 1 0 49 0;
#X connect 1 0 42 0;
#X connect 2 0 21 0;
#X connect 3 0 18 0;
#X connect 5 0 4 0;
#X connect 6 0 5 0;
#X connect 6 0 15 0;
#X connect 8 0 7 0;
#X connect 9 0 8 0;
#X connect 10 0 2 0;
#X connect 11 0 9 0;
#X connect 12 0 41 0;
#X connect 13 0 12 1;
#X connect 13 0 16 0;
#X connect 15 0 14 0;
#X connect 16 0 17 1;
#X connect 17 0 41 0;
#X connect 18 0 4 0;
#X connect 18 1 19 0;
#X connect 20 0 1 1;
#X connect 21 0 20 0;
#X connect 27 0 56 0;
#X connect 27 0 55 0;
#X connect 28 0 38 0;
#X connect 30 0 28 0;
#X connect 30 0 35 0;
#X connect 31 0 40 0;
#X connect 32 0 31 1;
#X connect 32 0 33 0;
#X connect 32 0 36 0;
#X connect 33 0 34 1;
#X connect 34 0 40 0;
#X connect 35 0 29 0;
#X connect 36 0 29 0;
#X connect 37 0 27 1;
#X connect 38 0 37 0;
#X connect 42 0 50 0;
#X connect 44 0 42 3;
#X connect 44 0 55 3;
#X connect 46 0 42 2;
#X connect 46 0 55 2;
#X connect 47 0 42 4;
#X connect 47 0 48 0;
#X connect 47 0 55 4;
#X connect 48 0 46 0;
#X connect 49 0 17 0;
#X connect 49 0 12 0;
#X connect 50 0 17 0;
#X connect 50 0 12 0;
#X connect 51 0 52 0;
#X connect 51 0 50 1;
#X connect 52 0 49 1;
#X connect 53 0 44 0;
#X connect 54 0 53 0;
#X connect 55 0 57 0;
#X connect 56 0 34 0;
#X connect 56 0 31 0;
#X connect 57 0 34 0;
#X connect 57 0 31 0;
#X connect 58 0 59 0;
#X connect 58 0 57 1;
#X connect 59 0 56 1;
#X connect 61 0 42 1;
#X connect 61 0 55 1;
#X coords 0 -1 1 1 72 59 1 300 99;
