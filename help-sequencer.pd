#N canvas 5 61 872 806 10;
#X obj 304 235 cnv 15 380 50 empty empty empty 20 12 0 14 -175856 -66577
0;
#X obj 14 332 sequencer;
#X obj 10 1 cnv 15 210 230 empty empty empty 20 12 0 14 -200369 -42246
0;
#X text 40 12 = start/stop playback;
#X text 40 40 = receive sync bang;
#X text 40 69 = external clock / position;
#X text 48 98 = length of sequence;
#X text 49 121 = start of sequence;
#X text 49 142 = skip value;
#X obj 18 14 tgl 17 0 \$0-seq-on \$0-seq-on-set run 1 -6 0 8 -220667
-355 -355 0 1;
#X obj 18 42 tgl 17 0 \$0-sync \$0-sync-set sync -1 -6 0 8 -241142
-143491 -90133 0 1;
#X obj 13 102 nbx 3 10 1 40 0 0 \$0-len \$0-len-set length 0 -6 0 8
-175864 -1109 -1109 1 256;
#X obj 13 124 nbx 3 10 1 40 0 0 \$0-start \$0-start-set start 0 -6
0 8 -175864 -1109 -1109 1 256;
#X obj 13 146 nbx 3 10 1 160 0 0 \$0-step \$0-step-set skip 0 -6 0
8 -175864 -1109 -1109 1 256;
#X obj 18 69 tgl 17 0 \$0-clock-ext \$0-clock-ext-set ext 0 -5 0 8
-241142 -143491 -90133 0 1;
#X obj 12 171 bng 10 250 50 0 \$0-reset-count \$0-reset-count-bng reset
3 -6 0 8 -262144 -1 -1;
#X obj 12 216 nbx 2 12 1 128 0 0 empty \$0-pos-display position 0 -5
0 7 -262144 -1 -1 1 256;
#X obj 12 216 nbx 2 12 1 128 0 0 \$0-pos-disp \$0-pos-display empty
0 -6 0 10 -262144 -1 -1 1 256;
#X obj 12 192 nbx 3 12 1 999 0 0 empty \$0-count-display count 0 -5
0 7 -262144 -1 -1 1 256;
#X obj 12 192 nbx 3 12 1 999 0 0 \$0-count-disp \$0-count-display empty
0 -6 0 10 -262144 -1 -1 1 256;
#X obj 34 171 bng 10 250 50 0 \$0-reset \$0-reset-bng pos 0 16 0 7
-261689 -86277 -86277;
#X text 49 165 = reset count / position;
#X text 52 190 = (count) sequences played;
#X text 45 213 = current step (position);
#X obj 224 1 cnv 15 234 230 empty empty empty 20 12 0 14 -126623 -42246
0;
#X obj 239 18 cnv 15 28 186 empty empty empty 20 12 0 14 -109787 -66577
0;
#X obj 244 46 vradio 8 1 0 16 \$0-adddiv-num \$0-adddiv-num-set num
-1 -5 0 8 -204337 -66893 -13381 0;
#X obj 254 46 vradio 8 1 0 16 \$0-adddiv-div \$0-adddiv-div-set div
-4 134 0 8 -199801 -50198 -16662 0;
#X obj 243 187 nbx 2 10 1 99 0 0 \$0-div-real-num \$0-div-real empty
0 -6 0 8 -199801 -50198 -50198 1 256;
#X obj 243 24 nbx 2 10 1 99 0 0 \$0-num-real-pipe \$0-num-real empty
0 -6 0 8 -204337 -66893 -66893 1 256;
#X floatatom 239 207 3 0 0 0 - #0-tempo -;
#X obj 227 20 vsl 12 200 2 400 0 0 \$0-tempo \$0-tempo-set tempo 0
-8 0 10 -208875 -42246 -42246 0 0;
#X obj 462 -25 cnv 15 400 256 empty empty empty 20 12 0 14 -187951
-66577 0;
#X obj 469 -11 tgl 17 0 \$0-step-go \$0-step-stop record -6 -6 0 8
-191984 -1109 -1109 0 1;
#X obj 469 21 tgl 17 0 \$0-chn-set \$0-chn-set-set chn 0 -6 0 10 -171509
-1109 -1109 0 1;
#X obj 469 68 vradio 17 1 0 3 \$0-trig-set \$0-trig-set-set tog 0 -6
0 10 -147000 -1109 -42246 0;
#X obj 464 132 nbx 3 10 1 40 0 0 \$0-step-left \$0-step-left-set start
0 -6 0 10 -220901 -42246 -42246 1 256;
#X obj 464 154 nbx 3 10 1 40 0 0 \$0-step-right \$0-step-right-set
end 0 -6 0 10 -220900 -42246 -42246 1 256;
#X obj 469 177 tgl 14 0 \$0-vel-also \$0-vel-also-set &vel -2 -6 0
10 -249312 -42246 -42246 0 1;
#X obj 470 214 tgl 12 0 \$0-vel-only \$0-vel-only-set only -5 -6 0
10 -249312 -42246 -42246 0 1;
#X obj 18 14 tgl 17 0 \$0-seq-on \$0-seq-on-set run 1 -6 0 8 -220667
-355 -355 0 1;
#X obj 18 42 tgl 17 0 \$0-sync \$0-sync-set sync -1 -6 0 8 -241142
-143491 -90133 0 1;
#X obj 13 102 nbx 3 10 1 40 0 0 \$0-len \$0-len-set length 0 -6 0 8
-175864 -1109 -1109 1 256;
#X obj 13 124 nbx 3 10 1 40 0 0 \$0-start \$0-start-set start 0 -6
0 8 -175864 -1109 -1109 1 256;
#X obj 13 146 nbx 3 10 1 160 0 0 \$0-step \$0-step-set skip 0 -6 0
8 -175864 -1109 -1109 1 256;
#X obj 18 69 tgl 17 0 \$0-clock-ext \$0-clock-ext-set ext 0 -5 0 8
-241142 -143491 -90133 0 1;
#X obj 12 171 bng 10 250 50 0 \$0-reset-count \$0-reset-count-bng reset
3 -6 0 8 -262144 -1 -1;
#X obj 12 216 nbx 2 12 1 128 0 0 empty \$0-pos-display position 0 -5
0 7 -262144 -1 -1 1 256;
#X obj 12 216 nbx 2 12 1 128 0 0 \$0-pos-disp \$0-pos-display empty
0 -6 0 10 -262144 -1 -1 1 256;
#X obj 12 192 nbx 3 12 1 999 0 0 empty \$0-count-display count 0 -5
0 7 -262144 -1 -1 1 256;
#X obj 12 192 nbx 3 12 1 999 0 0 \$0-count-disp \$0-count-display empty
0 -6 0 10 -262144 -1 -1 1 256;
#X obj 34 171 bng 10 250 50 0 \$0-reset \$0-reset-bng pos 0 16 0 7
-261689 -86277 -86277;
#X obj 244 46 vradio 8 1 0 16 \$0-adddiv-num \$0-adddiv-num-set num
-1 -5 0 8 -204337 -66893 -13381 0;
#X obj 254 46 vradio 8 1 0 16 \$0-adddiv-div \$0-adddiv-div-set div
-4 134 0 8 -199801 -50198 -16662 0;
#X obj 243 187 nbx 2 10 1 99 0 0 \$0-div-real-num \$0-div-real empty
0 -6 0 8 -199801 -50198 -50198 1 256;
#X obj 243 24 nbx 2 10 1 99 0 0 \$0-num-real-pipe \$0-num-real empty
0 -6 0 8 -204337 -66893 -66893 1 256;
#X floatatom 239 207 3 0 0 0 - #0-tempo -;
#X obj 227 20 vsl 12 200 2 400 0 0 \$0-tempo \$0-tempo-set tempo 0
-8 0 10 -208875 -42246 -42246 0 0;
#X obj 469 -11 tgl 17 0 \$0-step-go \$0-step-stop record -6 -6 0 8
-191984 -1109 -1109 0 1;
#X obj 469 21 tgl 17 0 \$0-chn-set \$0-chn-set-set chn 0 -6 0 10 -171509
-1109 -1109 0 1;
#X obj 469 68 vradio 17 1 0 3 \$0-trig-set \$0-trig-set-set tog 0 -6
0 10 -147000 -1109 -42246 0;
#X obj 464 132 nbx 3 10 1 40 0 0 \$0-step-left \$0-step-left-set start
0 -6 0 10 -220901 -42246 -42246 1 256;
#X obj 464 154 nbx 3 10 1 40 0 0 \$0-step-right \$0-step-right-set
end 0 -6 0 10 -220900 -42246 -42246 1 256;
#X obj 469 177 tgl 14 0 \$0-vel-also \$0-vel-also-set &vel -2 -6 0
10 -249312 -42246 -42246 0 1;
#X obj 470 214 tgl 12 0 \$0-vel-only \$0-vel-only-set only -5 -6 0
10 -249312 -42246 -42246 0 1;
#X text 502 150 = which to finish on.;
#X text 489 173 = Write pitches (top row of numbers) and velocities
(bottom row of numbers). when neither button is checked \, the top
row of numbers (MIDI pitches) only is written.;
#X text 495 9 = MIDI channel write. This allows the user to input the
radio-button sequence \, where 0 usually means none rather than omni.
This means there are 12 channels available to the user. This could
be used as a patch number \, and the samplemap abstraction may be used
to remap these values.;
#X text 489 210 = Write bottom row of numbers only \, as pitches.;
#X text 502 128 = which sequence step to start recording on.;
#X text 496 68 = whether or not to write a toggle row. These may be
used as triggers. The top setting (0) writes no toggle rows. The middle
setting (1) writes the top row \, and the bottom (2) writes the second
row. A column may be skipped at any point by pressing the spacebar.
;
#X text 510 293 message-tagged control parameters;
#X obj 394 -93 cnv 15 234 64 empty empty empty 20 12 0 14 -126623 -42246
0;
#X text 399 -89 Note: <div> values are fractions of;
#X text 396 -77 a 1/4th note \, so a <div> value of 6;
#X text 400 -65 means that the note is 1/6th of 1/4th;
#X obj 394 -30 cnv 15 64 30 empty empty empty 20 12 0 14 -126623 -42246
0;
#X text 397 -53 note long = a 1/24th note (6x4=24).;
#X text 272 59 is set using the tempo slider.;
#X text 272 82 relative to four 1/16th notes;
#X text 271 47 The tempo in beats-per-minute \,;
#X text 273 71 Polyrhythmic subdivisions are;
#X text 273 93 so a <div> value of 5 means;
#X text 273 104 there will be 5/20th notes;
#X text 273 115 per-beat.;
#X text 273 139 The <num> value is how many;
#X text 273 152 of these rhythmic units each;
#X text 273 165 step lasts for \, so <num>=5 and;
#X text 274 178 <div>=6 means that each step;
#X text 274 191 will be 5/24th notes long.;
#X text 268 3 The tempo is set here \, but also;
#X text 269 15 the subdivision and multiple of;
#X text 269 27 the beat.;
#X text 495 -17 = step record. This can be programmed either via a
stepkeys abstraction \, or by using a MIDI keyboard.;
#N canvas 5 48 1088 323 control_parameters 0;
#X obj 16 65 cnv 15 220 200 empty empty sync 20 12 0 16 -184179 -13381
0;
#X msg 304 76 params 1 3 1 1 28 160;
#X obj 23 -3 loadbang;
#X obj 487 3 cnv 15 250 60 empty empty randomization 20 12 0 16 -204403
-13381 0;
#X text 503 22 all;
#X text 542 22 rad;
#X text 573 22 tog_1;
#X text 608 22 tog_2;
#X text 643 22 num_1;
#X text 678 22 num_2;
#X obj 457 64 cnv 15 160 150 empty empty num_1 20 12 0 16 -216686 -13381
0;
#X msg 463 114 trans1 1;
#X msg 482 160 float1 1;
#X msg 543 160 offset1 60;
#X msg 525 114 scope1 24;
#X text 472 97 range;
#X text 469 86 bipolar;
#X text 481 131 integer or;
#X text 490 143 float;
#X text 556 144 offset;
#X obj 463 184 s \$0-seq_control;
#X text 536 97 range;
#X obj 618 64 cnv 15 160 150 empty empty num_2 20 12 0 16 -183926 -13381
0;
#X msg 631 117 trans2 1;
#X msg 644 163 float2 1;
#X text 636 100 range;
#X text 633 89 bipolar;
#X text 645 133 integer or;
#X text 654 145 float;
#X text 719 147 offset;
#X text 702 99 range;
#X msg 693 117 scope2 18;
#X msg 704 163 offset2 32;
#X msg 493 39 random;
#X msg 540 39 rnd1;
#X msg 574 39 rnd2;
#X msg 609 39 rnd3;
#X msg 644 39 rnd4;
#X msg 678 39 rnd5;
#X obj 530 56 s \$0-seq_control;
#X obj 534 80 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 721 84 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 507 221 cnv 15 250 60 empty empty math 20 12 0 16 -188400 -13381
0;
#X msg 528 257 add1 7;
#X msg 657 256 add2 -10;
#X text 529 239 num_1;
#X text 667 237 num_2;
#X obj 785 3 cnv 15 250 60 empty empty initialization 20 12 0 16 -225203
-13381 0;
#X text 805 22 all;
#X text 834 22 rad;
#X text 869 22 tog_1;
#X text 907 22 tog_2;
#X text 946 22 num_1;
#X text 986 22 num_2;
#X msg 801 39 init;
#X msg 832 39 init1;
#X msg 870 39 init2;
#X msg 908 39 init3;
#X msg 947 39 init4;
#X msg 986 39 init5;
#X obj 785 71 cnv 15 300 140 empty empty elements 20 12 0 16 -208495
-13381 0;
#X obj 792 183 s \$0-seq_control;
#X obj 919 86 kalashnikov 12;
#X obj 1023 118 random 5;
#X obj 1023 138 < 2;
#X obj 958 146 pack;
#X obj 958 106 t f b;
#X obj 958 126 + 10;
#X obj 900 86 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 270 98 cnv 15 180 90 empty empty patterns 20 12 0 16 -200443
-13381 0;
#X msg 295 167 pat \$1;
#X msg 344 167 next;
#X msg 384 167 randpat;
#X text 293 117 recall;
#X text 287 127 pattern #;
#X floatatom 295 146 5 0 4 0 - - -;
#X text 341 138 next;
#X text 334 149 pattern;
#X text 387 138 random;
#X text 384 149 pattern;
#X obj 200 -21 cnv 15 280 80 empty empty play 20 12 0 16 -183738 -13381
0;
#X msg 206 39 start;
#X msg 247 39 stop;
#X msg 286 39 cont;
#X msg 426 39 step 3;
#X msg 323 39 start 5;
#X msg 378 39 len 20;
#X text 210 -3 play;
#X text 208 10 from;
#X text 206 21 start;
#X text 246 21 stop;
#X text 288 9 from;
#X text 282 -2 continue;
#X text 281 20 current;
#X text 333 9 start;
#X text 325 20 position;
#X text 375 8 sequence;
#X text 378 20 length;
#X text 432 10 skip;
#X text 428 21 steps;
#X obj 241 193 cnv 15 210 100 empty empty timing 20 12 0 16 -212714
-13381 0;
#X msg 317 267 div 7;
#X msg 247 268 tempo 112;
#X text 255 249 tempo;
#X text 258 237 note;
#X text 259 225 1/4;
#X text 310 224 division;
#X text 328 237 of;
#X text 306 249 1/4 notes;
#X text 381 210 number;
#X text 369 223 of rhythmic;
#X text 367 247 sequence step;
#X text 374 235 steps per-;
#X text 313 212 rhythmic;
#X text 285 58 num div step start len tempo;
#X msg 34 118 sync;
#X msg 74 152 trig;
#X msg 98 104 pos \$1;
#X msg 39 224 rstc;
#X msg 36 181 reset;
#X floatatom 98 84 5 1 40 2 position - -;
#X msg 145 157 c_ext \$1;
#X msg 145 105 1;
#X text 150 173 external clock;
#X text 151 184 or position;
#X text 17 101 1st beat sync;
#X text 70 124 manual;
#X text 72 135 advance;
#X obj 144 131 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 75 174 reset;
#X text 76 184 position;
#X text 73 219 reset;
#X text 73 230 count;
#X obj 134 224 s \$0-seq_control;
#X msg 23 17 file datasets/sequencer.seq;
#X obj 23 39 s \$0-seq_control;
#X obj 786 225 r \$0-seq_control;
#X obj 786 246 outlet;
#X msg 792 94 set 1 5 4;
#X msg 808 113 set 4 26 -2.6;
#X msg 824 135 set 5 19 100;
#X msg 833 156 set 2 34 1;
#X msg 958 166 set 3 \$1 \$2;
#X msg 380 266 num 3;
#X connect 1 0 20 0;
#X connect 2 0 134 0;
#X connect 11 0 20 0;
#X connect 12 0 20 0;
#X connect 13 0 20 0;
#X connect 14 0 20 0;
#X connect 23 0 20 0;
#X connect 24 0 20 0;
#X connect 31 0 20 0;
#X connect 32 0 20 0;
#X connect 33 0 39 0;
#X connect 34 0 39 0;
#X connect 35 0 39 0;
#X connect 36 0 39 0;
#X connect 37 0 39 0;
#X connect 38 0 39 0;
#X connect 40 0 37 0;
#X connect 41 0 38 0;
#X connect 43 0 20 0;
#X connect 44 0 20 0;
#X connect 54 0 39 0;
#X connect 55 0 39 0;
#X connect 56 0 39 0;
#X connect 57 0 39 0;
#X connect 58 0 39 0;
#X connect 59 0 39 0;
#X connect 62 1 66 0;
#X connect 63 0 64 0;
#X connect 64 0 65 1;
#X connect 65 0 142 0;
#X connect 66 0 67 0;
#X connect 66 1 63 0;
#X connect 67 0 65 0;
#X connect 68 0 62 0;
#X connect 70 0 20 0;
#X connect 71 0 20 0;
#X connect 72 0 20 0;
#X connect 75 0 70 0;
#X connect 81 0 39 0;
#X connect 82 0 39 0;
#X connect 83 0 39 0;
#X connect 84 0 39 0;
#X connect 85 0 39 0;
#X connect 86 0 39 0;
#X connect 101 0 20 0;
#X connect 102 0 20 0;
#X connect 115 0 133 0;
#X connect 116 0 133 0;
#X connect 117 0 133 0;
#X connect 118 0 133 0;
#X connect 119 0 133 0;
#X connect 120 0 117 0;
#X connect 120 0 122 0;
#X connect 121 0 133 0;
#X connect 122 0 128 0;
#X connect 128 0 121 0;
#X connect 134 0 135 0;
#X connect 136 0 137 0;
#X connect 138 0 61 0;
#X connect 139 0 61 0;
#X connect 140 0 61 0;
#X connect 141 0 61 0;
#X connect 142 0 61 0;
#X connect 143 0 20 0;
#X restore 380 308 pd control_parameters;
#X obj 91 241 stepkeys;
#X text 308 239 step input is configured to work from a MIDI keyboard
\, but you can also use the stepkeys object to turn your qwerty keyboard
into a mini midi controller of sorts!;
#X text 13 316 V;
#X text 13 307 |;
#X text 12 293 step input;
#X text 550 316 V;
#X text 550 307 |;
#X obj 464 572 print sequencer;
#X obj 14 572 print output;
#X obj 118 611 simplesynth~;
#X obj 242 627 clik~;
#X msg 280 627 file datasets/click.pat \, randpat;
#X floatatom 118 591 5 0 0 0 - - -;
#X floatatom 159 591 5 0 0 0 - - -;
#X obj 200 591 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 118 631 mix~;
#X obj 242 647 mix~;
#X obj 118 571 route num_1 num_2 trig_1 trig_2 rad;
#X obj 439 610 loadbang;
#X obj 242 591 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 283 591 hradio 12 1 0 13 empty empty empty 0 -8 0 10 -262144
-1 -1 6;
#X msg 283 606 patch \$1;
#X obj 187 676 dac~;
#X obj 572 498 cnv 15 270 70 empty empty bank 8 8 0 10 -188065 -42246
0;
#X obj 616 553 bng 10 250 50 0 \$0-seq-load empty LOAD -4 -5 0 7 -225271
-42246 -42246;
#X obj 653 553 bng 10 250 50 0 \$0-seq-save empty SAVE -4 -5 0 7 -261689
-258699 -143491;
#X obj 582 522 nbx 2 10 1 99 0 0 \$0-cuput \$0-cpdcop empty 25 5 0
7 -232507 -90133 -90133 1 256;
#X obj 582 522 nbx 2 10 1 99 0 0 \$0-patterns-num \$0-patterns-num-set
patterns -6 -5 0 7 -232507 -90133 -90133 1 256;
#X obj 774 531 nbx 2 10 0 4 0 0 \$0-current-pattern \$0-current-pattern-set
current -4 16 0 7 -232507 -90133 -90133 0 256;
#X obj 720 521 bng 10 250 50 0 \$0-new-pattern empty new -2 -5 0 8
-232507 -90133 -90133;
#X text 609 498 To make a new pattern from the current;
#X text 610 510 pattern click the;
#X text 735 510 button.;
#X text 629 548 and;
#X obj 572 332 cnv 15 270 130 empty empty randomizations 10 8 0 12
-200119 -13330 0;
#X obj 580 351 tgl 8 0 \$0-r1-trans \$0-r1-trans-set t -5 4 0 7 -220792
-1109 -1109 0 1;
#X obj 578 369 nbx 3 8 0 128 0 0 \$0-r1-scope \$0-r1-scope-set scope
0 -5 0 8 -220792 -1109 -1109 0 256;
#X obj 596 351 tgl 8 0 \$0-r1-float \$0-r1-float-set f -6 5 0 7 -220792
-1109 -1109 0 1;
#X obj 580 445 nbx 4 10 -1e+037 1e+037 0 0 \$0-add-num-1 \$0-add-num-1-set
+/-n1 0 -5 0 8 -220856 -1109 -13330 0 256;
#X obj 578 388 nbx 3 8 -96 96 0 0 \$0-r1-offset \$0-r1-offset-set offset
0 -5 0 8 -220792 -1109 -1109 0 256;
#X obj 91 311 route note;
#X text 608 346 t and f determine whether the numbers;
#X text 608 357 are transpositions (bipolar) or floats;
#X text 607 369 (normally they are integers).;
#X text 609 381 random numbers are generated in the;
#X text 610 393 range 0 to scope or if trans is on \,;
#X text 609 404 -scope/2 to +scope/2;
#X text 611 416 the offset is then added to them.;
#X text 618 434 the +/-n adds a fixed value to all;
#X text 619 445 of the numbers.;
#X text 609 527 To recall a pattern \, drag;
#X obj 10 -93 cnv 15 380 90 empty empty sequencer 20 18 0 28 -163135
-13330 0;
#X text 25 -61 ...is one of the sequencers included with metastudio-0.3
and incorporates step entry \, switchable polyrhythm \, randomization
\, multiple modes of playback and a variety of stored parameters.;
#X obj 572 466 cnv 15 270 28 empty empty empty 20 12 0 14 -192439 -66577
0;
#X obj 580 477 bng 12 250 50 0 \$0-reset-all \$0-rstall init -1 -5
0 7 -187834 -1109 -1109;
#X text 616 472 init buttons set all values to 0;
#X text 665 549 sets of patterns to disk;
#X connect 1 0 103 0;
#X connect 1 0 112 0;
#X connect 1 1 102 0;
#X connect 94 0 1 0;
#X connect 95 0 135 0;
#X connect 104 0 110 0;
#X connect 105 0 111 0;
#X connect 106 0 105 1;
#X connect 107 0 104 0;
#X connect 108 0 104 1;
#X connect 109 0 104 2;
#X connect 110 0 117 0;
#X connect 110 0 117 1;
#X connect 111 0 117 0;
#X connect 111 0 117 1;
#X connect 112 0 107 0;
#X connect 112 1 108 0;
#X connect 112 2 109 0;
#X connect 112 3 114 0;
#X connect 112 4 115 0;
#X connect 113 0 106 0;
#X connect 114 0 105 0;
#X connect 115 0 116 0;
#X connect 116 0 105 1;
#X connect 135 0 1 0;
